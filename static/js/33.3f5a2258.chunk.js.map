{"version":3,"file":"static/js/33.3f5a2258.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/Container/Container.module.css?9c83","Components/Container/Container.js","webpack://my-app/./src/Components/Form/Form.module.css?ea3d","Components/Form/Form.js","webpack://my-app/./src/Components/ContactListItem/ContactListItem.module.css?c96c","Components/ContactListItem/ContactListItem.js","webpack://my-app/./src/Components/ContactList/ContactList.module.css?edd1","Components/ContactList/ContactList.js","webpack://my-app/./src/Components/Filter/Filter.module.css?3b56","Components/Filter/Filter.js","Components/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__KIw34\"};","import s from './Container.module.css'\nimport PropTypes from \"prop-types\";\n\nexport default function Container({children}){\n    return <div className={s.container}>{children}</div>\n}\n\nContainer.propTypes ={\n    children : PropTypes.node,\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Form_button__YiJPo\",\"input\":\"Form_input__vaw3o\",\"label\":\"Form_label__n2FLN\"};","import { useState } from \"react\";\nimport s from \"./Form.module.css\";\nimport PropTypes from \"prop-types\";\nimport {useAddContactMutation} from \"../../redux/slice\";\nimport Notiflix from \"notiflix\";\n\n\n export default function Form({contacts}) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [addContact,{isLoading}] = useAddContactMutation()\n\n\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const contactNames = contacts.map((contact) => contact.name);\n\n    if (contactNames.includes(event.currentTarget.name.value)) {\n      alert(`${event.currentTarget.name.value} is alredy in contacts`);\n      resetForm();\n      return;\n    }\n\n    // dispatch(addContact(name, number))\n    addContact({name, number})\n    Notiflix.Notify.success(`${name} added to contacts`);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>Name</label>\n      <input\n        className={s.input}\n        value={name}\n        onChange={handleInput}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label className={s.label}>Number</label>\n      <input\n        className={s.input}\n        value={number}\n        onChange={handleInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n \n      <button className={s.button} type=\"submit\" disabled={isLoading}>\n        Add contact {isLoading && '...'}\n      </button>  \n     \n \n    </form>\n  );\n}\n\nForm.propTypes = {\n  // addContact: PropTypes.func.isRequired,\n// contacts: PropTypes.array.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__TQkxm\",\"button\":\"ContactListItem_button__DYqG2\"};","import s from './ContactListItem.module.css'\nimport PropTypes from \"prop-types\";\n// import { useDispatch } from 'react-redux';\n// import {deleteContact} from '../../redux/actions'\n\nexport default function ContactListItem ({name,number,id,onDelete}){\n// const dispatch = useDispatch()\n// console.log(name);\n    return <li  className={s.item}>{name}:{number} \n    <button onClick={() => onDelete(id)} className={s.button}>delete</button>\n    </li> \n}\n\n\nContactListItem.propTypes = {\n    number: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired\n  };\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__OQel1\"};","import ContactListItem from \"../ContactListItem/ContactListItem\";\nimport s from \"./ContactList.module.css\";\n// import PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport {useDeleteContactMutation } from '../../redux/slice';\n\n\nexport default function ContactList({data}) {\nconst [deleteContact] = useDeleteContactMutation()\n\n\n  const contacts = useSelector(state =>{\n    return data && data.filter(contact =>{\n        return contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n      })\n  })\n\n\n  return (\n    <ul className={s.list}>\n      {data && contacts.map((contact) => (\n        <ContactListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDelete={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n// };\n\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__1LYcu\",\"input\":\"Filter_input__hN7QM\",\"filter\":\"Filter_filter__tDime\"};","import s from \"./Filter.module.css\";\n// import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {changeFilter} from '../../redux/actions'\n\nexport default function Filter() {\nconst value = useSelector(state => state.filter)\nconst dispatch = useDispatch()\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>Find contact by name</label>\n      <input onChange={(event) => dispatch(changeFilter(event.target.value))} className={s.input} value={value} type=\"text\" name=\"filter\" />\n    </div>\n  );\n};\n\n// Filter.propTypes ={\n//   value: PropTypes.string.isRequired,\n//   changeFilter: PropTypes.func.isRequired,\n// }\n\n","\nimport Container from './Container/Container';\nimport s from '../App.module.css';\nimport { useFetchContactsQuery } from '../redux/slice';\nimport { FaRegAddressBook } from 'react-icons/fa';\nimport Form from './Form/Form';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport Notiflix from 'notiflix';\nimport { useEffect } from 'react';\n\n\n\nexport default function ContactsPage() {\n\n    const { data, error, isFetching } = useFetchContactsQuery()\n\n\n    return (\n      <>\n\n      <Container>\n    {/* {error && Notiflix.Notify.failure(error.data.message)} */}\n\n\n\n        <h1 className={s.title}>Phone Book <FaRegAddressBook style={{ width: 25, height: 25, marginLeft: '10px'}}/></h1>\n        <Form contacts={data}/>\n  \n        <h2 className={s.title}>Contacts</h2>\n        <Filter />\n        <ContactList data={data}/>\n      </Container>\n      </>\n    );\n  }\n  "],"names":["Container","children","className","s","Form","contacts","useState","name","setName","number","setNumber","useAddContactMutation","addContact","isLoading","handleInput","event","target","value","resetForm","onSubmit","preventDefault","map","contact","includes","currentTarget","alert","Notiflix","onChange","type","pattern","title","required","disabled","ContactListItem","id","onDelete","onClick","ContactList","data","useDeleteContactMutation","deleteContact","useSelector","state","filter","toLowerCase","Filter","dispatch","useDispatch","changeFilter","ContactsPage","useFetchContactsQuery","error","isFetching","style","width","height","marginLeft"],"sourceRoot":""}